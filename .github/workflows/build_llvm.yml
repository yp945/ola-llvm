name: Build LLVM Binaries
on:
  push:
    tags:
    - 'llvm*'

jobs:
  linux-x86-64:
    name: Linux x86-64
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3.1.0
      with:
        submodules: recursive
    - run: git clone --depth 1 --branch llvmorg-15.0.0 https://github.com/llvm/llvm-project
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - run: cmake -G Ninja -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_ENABLE_TERMINFO=Off
        -DLLVM_ENABLE_LIBXML2=Off -DLLVM_ENABLE_ZLIB=Off
        -DLLVM_ENABLE_PROJECTS='clang;lld'
        -DLLVM_ENABLE_ZSTD=Off
        -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=../llvm15.0 llvm
      working-directory: ./llvm-project/
    - run: cmake --build . --target install
      working-directory: ./llvm-project/
    - run: tar Jcf ./llvm15.0-linux-x86-64.tar.xz ./llvm15.0/
    - name: Upload llvm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: llvm15.0-linux-x86-64.tar.xz
        asset_name: llvm15.0-linux-x86-64.tar.xz
        tag: ${{ github.ref }}

  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3.1.0
      with:
        submodules: recursive
    - uses: dtolnay/rust-toolchain@1.64.0
    - run: git clone --depth 1 --branch llvmorg-15.0.0 https://github.com/llvm/llvm-project
      working-directory: C:\
    - name: Setup Windows
      uses: llvm/actions/setup-windows@main
      with:
        arch: amd64
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - run: cmake -G Ninja -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_ENABLE_TERMINFO=Off
        -DLLVM_ENABLE_LIBXML2=Off -DLLVM_ENABLE_ZLIB=Off
        -DLLVM_ENABLE_PROJECTS='clang;lld'
        -DLLVM_ENABLE_ZSTD=Off
        -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=C:/llvm15.0 llvm
      working-directory: C:\llvm-project
    - run: cmake --build . --target install
      working-directory: C:\llvm-project
    - run: Compress-Archive -Path C:\llvm15.0 -DestinationPath C:\llvm15.0-win.zip
    - name: Upload llvm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: C:\llvm15.0-win.zip
        asset_name: llvm15.0-win.zip
        tag: ${{ github.ref }}

  mac-arm:
    name: Mac Arm
    runs-on: macos-13-xl
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: dtolnay/rust-toolchain@1.64.0
    - run: git clone --depth 1 --branch llvmorg-15.0.0 https://github.com/llvm/llvm-project
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - run: cmake -G Ninja -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_ENABLE_TERMINFO=Off
        -DLLVM_ENABLE_LIBXML2=Off -DLLVM_ENABLE_ZLIB=Off
        -DLLVM_ENABLE_PROJECTS='clang;lld'
        -DLLVM_ENABLE_ZSTD=Off
        -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=../llvm15.0 llvm
      working-directory: ./llvm-project/
    - run: cmake --build . --target install
      working-directory: ./llvm-project/
    - run: tar Jcf ./llvm15.0-mac-arm.tar.xz ./llvm15.0/
    - name: Upload llvm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: llvm15.0-mac-arm.tar.xz
        asset_name: llvm15.0-mac-arm.tar.xz
        tag: ${{ github.ref }}

  mac-intel:
    name: Mac Intel
    runs-on: macos-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - uses: dtolnay/rust-toolchain@1.64.0
    - run: git clone --depth 1 --branch llvmorg-15.0.0 https://github.com/llvm/llvm-project
    - name: Install Ninja
      uses: llvm/actions/install-ninja@main
    - run: cmake -G Ninja -DLLVM_ENABLE_ASSERTIONS=On -DLLVM_ENABLE_TERMINFO=Off
        -DLLVM_ENABLE_LIBXML2=Off -DLLVM_ENABLE_ZLIB=Off
        -DLLVM_ENABLE_PROJECTS='clang;lld'
        -DLLVM_ENABLE_ZSTD=Off
        -DCMAKE_BUILD_TYPE=MinSizeRel -DCMAKE_INSTALL_PREFIX=../llvm15.0 llvm
      working-directory: ./llvm-project/
    - run: cmake --build . --target install
      working-directory: ./llvm-project/
    - run: tar Jcf ./llvm15.0-mac-intel.tar.xz ./llvm15.0/
    - name: Upload llvm
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: llvm15.0-mac-intel.tar.xz
        asset_name: llvm15.0-mac-intel.tar.xz
        tag: ${{ github.ref }}
